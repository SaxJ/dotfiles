colorscheme kaleidoscope-dark

set-option global grepcmd "rg -niL --column"
set-option global tabstop 4

# Editor Config
hook global BufOpenFile .* %{
    editorconfig-load
    modeline-parse
}
hook global BufNewFile .* editorconfig-load

# On-Start Appearance
hook global KakBegin .* %{
    add-highlighter global/matching_char show-matching
}
hook global WinCreate .* %{
    add-highlighter window/number-lines number-lines -hlcursor -relative
}

# Make parent directories
hook global BufWritePre .* %{ nop %sh{ dir=$(dirname "$kak_buffile")
	[ -d "$dir" ] || mkdir -p "$dir"
}}

# Tab for completions
hook global InsertCompletionShow .* %{ map window insert <tab> <c-n> }
hook global InsertCompletionShow .* %{ map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n> }
hook global InsertCompletionHide .* %{ unmap window insert <s-tab> <c-p> }

# Use system clipboard
hook -group clipboard global NormalKey y|d|c %{
    nop %sh{
        printf %s "$kak_main_reg_dquote" | wl-copy -o
    }
}

define-command sync-clip %{
    evaluate-commands %sh{
        wl-paste -n > /tmp/kak-clip
        echo 'set-register dquote "%file{/tmp/kak-clip}"'
    }
    nop %sh{ rm -rf /tmp/kak-clip }
}
map global normal Y ': sync-clip<ret>' -docstring 'sync clipboard to kak'

# Show colours in the document eg. #d543c8 is pink
define-command show-color -docstring 'show main selection color in status bar' %{
  evaluate-commands %sh{
    awk_script='{
      if ((x=index($1,"#")) > 0)
        $1 = substr($1, x+1)
      if (length($1) == 8)
        $1 = substr($1, 1, 6)
      if (length($1) == 4)
        $1 = substr($1, 1, 3)
      if (length($1) == 3) {
        r = substr($1, 1, 1)
        g = substr($1, 2, 1)
        b = substr($1, 3, 1)
        $1 = r r g g b b
      }
      print "evaluate-commands -client " client " echo -markup {rgb:" $1 "} ██████"
    }'
    printf %s\\n "$kak_selection" | awk -v client="$kak_client" "$awk_script" | kak -p "$kak_session"
  }
}

define-command show-color-hook -docstring 'enable color preview in current buffer' %{
    hook -group 'show-color' buffer NormalIdle .* %{
        try %{
            execute-keys -draft '<a-i>w: show-color<ret>'
        }
    }
}

# Initialise plugin system
evaluate-commands %sh{
    plugins="$kak_config/plugins"
    mkdir -p "$plugins"
    [ ! -e "$plugins/plug.kak" ] && \
        git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
    printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload

# PLUGINS
plug "kakoune-editor/kakoune-extra-filetypes"
plug "https://gitlab.com/listentolist/kakoune-fandt" %{
	require-module fandt
}
plug "Delapouite/kakoune-text-objects"
plug "Delapouite/kakoune-auto-percent"
plug "Delapouite/kakoune-buffers" %{
    map global user b ':enter-user-mode -lock buffers<ret>' -docstring 'buffers (lock)…'
    map global buffers b ':fzf-buffer<ret>' -docstring 'Fzf buffer list'
}
plug "h-youhei/kakoune-surround" %{
    map global normal S ': surround<ret>' -docstring 'surround'
}
plug "andreyorst/smarttab.kak"
plug "andreyorst/fzf.kak" config %{
    require-module fzf
    require-module fzf-buffer
    require-module fzf-ctags
    require-module fzf-git
    require-module fzf-vcs
    require-module fzf-grep
    require-module fzf-sk-grep
    require-module fzf-project
    require-module fzf-file
    set-option global fzf_highlight_command 'chroma -f terminal16m -s solarized-light {}'
    set-option global fzf_file_command 'fd --type f --follow'
    set-option global fzf_sk_grep_command "rg -niL"
    set-option global fzf_use_main_selection false
    map global fzf g ': fzf-sk-grep<ret>'
    map global user f ': fzf-mode<ret>' -docstring 'fzf'
}
plug "https://gitlab.com/listentolist/kakoune-table"
plug "andreyorst/kaktree" config %{
    map global user 't' ": kaktree-toggle<ret>" -docstring "toggle filetree panel"
    hook global WinSetOption filetype=kaktree %{
        remove-highlighter buffer/numbers
        remove-highlighter buffer/matching
        remove-highlighter buffer/wrap
        remove-highlighter buffer/show-whitespaces
    }
    kaktree-enable
    set-option global kaktree_dir_icon_open  '⠀'
    set-option global kaktree_dir_icon_close '⠀'
    set-option global kaktree_file_icon      '⠀'
    set-face global kaktree_icon_face function
}

# LSP
plug "kak-lsp/kak-lsp" do %{
    cargo install --locked --force --path .
    # optional: if you want to use specific language servers
    mkdir -p ~/.config/kak-lsp
    cp -n kak-lsp.toml ~/.config/kak-lsp/
}
hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
    lsp-enable-window
}
map global normal K ': lsp-hover<ret>' -docstring 'lsp hover'
